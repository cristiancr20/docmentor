name: 07 - Lint React Code

on:
    workflow_dispatch:
    workflow_call:

jobs:
  lint:
    name: Lint Code with ESLint
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        project:
          - frontend
        node-version: [18.20.5]

    steps:
      # Paso 1: Clonar el repositorio
      - name: Checkout repository
        uses: actions/checkout@v4

      # Paso 2: Configurar Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }} # Asegúrate de usar la versión que necesita tu proyecto
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      # Paso 3: Instalar dependencias
      - name: Install dependencies
        working-directory: ${{ matrix.project }} 
        run: npm ci

      # Paso 4: Ejecutar ESLint
      - name: Run ESLint
        working-directory: ${{ matrix.project }}
        run: npm run lint -f json -o frontend/eslint-report.json && npm run lint -f html -o frontend/eslint-report.html


      # Paso 5: Subir los reportes (JSON y HTML)
      - name: Upload ESLint Reports
        uses: actions/upload-artifact@v4
        with:
          name: eslint-reports
          path: frontend/eslint-report*.{json,html}


      # Paso 6: Crear anotaciones a partir del reporte JSON de ESLint
      - name: Create ESLint annotations
        run: |
          if [ -f frontend/eslint-report.json ]; then
            jq -c '.[] | .messages[]' frontend/eslint-report.json | while read message; do
              line=$(echo $message | jq '.line')
              column=$(echo $message | jq '.column')
              severity=$(echo $message | jq -r '.severity')
              message=$(echo $message | jq -r '.message')
              echo "::notice title=ESLint error::$message at line $line column $column" >> $GITHUB_ENV
            done
          fi
